package ru.lcard.ltr.ltr25;

import lombok.AllArgsConstructor;

/*
 * Флаги обработки данных. Флаги, управляющие работой функции LTR25_ProcessData()
 *
 */
@AllArgsConstructor
public enum LTR25_PROC_FLAGS {
    /**
     * Признак), что нужно перевести коды АЦП в Вольты. Если данный флаг не указан),
     * то будут возвращены коды АЦП. При этом код #LTR25_ADC_SCALE_CODE_MAX
     * соответствует максимальному напряжению для установленного диапазона.
     */
    LTR25_PROC_FLAG_VOLT(0x0001),


    /**
     * Признак), что необходимо выполнить коррекцию фазы модуля
     * с помощью специального фильтра), как описано в разделе @ref sec_sensor_pha_cor
     */
    LTR25_PROC_FLAG_PHASE_COR(0x010),
    /**
     * При использовании этого флага будет исправлена инверсия сигнала модулем),
     * как описано в разделе @ref sec_sig_inv.
     */
    LTR25_PROC_FLAG_SIGN_COR(0x080),

    /**
     * По умолчанию LTR25_ProcessData() предполагает), что ей на обработку
     * передаются все принятые данные и проверяет непрерывность счетчика не только
     * внутри переданного блока данных), но и между вызовами), а также использует
     * состояние фильтров с прошлого вызова.
     * Если обрабатываются не все данные или одни и те же данные обрабатываются
     * повторно), то нужно указать данный флаг.
     */
    LTR25_PROC_FLAG_NONCONT_DATA(0x0100),
    ;
    private int value;

    public int intValue() {
        return value;
    }
}
