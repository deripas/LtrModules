package ru.lcard.ltr.ltrapi;

import lombok.AllArgsConstructor;

/**
 * Настраиваемые параметры службы ltrd.
 * <p>
 * Список параметров настройки, управляющих работой службы ltrd.
 * Данные параметры настраиваются через конфигурационный файл или
 * через LTR_SetServerParameter(). В описании каждого кода указывается,
 * каким образом задается значение параметра.
 */
@AllArgsConstructor
public enum en_LTRD_Params {
    /**
     * Интервал опроса крейта, для проверки, рабочее ли соединение с крейтом
     * по интерфейсу Ethernet и обнаружения отключения крейта.
     * Параметр типа DWORD задает время в мс.
     */
    LTRD_PARAM_ETH_CRATE_POLL_TIME(0x100),
    /**
     * Таймаут на установление соединения службы с крейтом по Ethernet.
     * Параметр типа DWORD задает время в мс.
     */
    LTRD_PARAM_ETH_CRATE_CON_TOUT(0x101),
    /**
     * Таймаут на ответ на управляющую команду крейту по Ethernet.
     * Параметр типа DWORD задает время в мс.
     */
    LTRD_PARAM_ETH_CRATE_CTLCMD_TOUT(0x102),
    /**
     * Интервал проверки адресов хоста для запуска автоподключения.
     * Параметр типа DWORD задает время в мс.
     */
    LTRD_PARAM_ETH_INTF_CHECK_TIME(0x103),
    /**
     * Время, через которое будет выполнено повторное подключения к крейту
     * по Ethernet в случае возникновения ошибки, если для данной IP записи
     * установлен флаг #LTR_CRATE_IP_FLAG_RECONNECT.
     * <p>
     * Параметр доступен начиная с версии ltrd 2.1.5.0 и ltrapi 1.31.1.
     */
    LTRD_PARAM_ETH_CRATE_RECONNECT_TIME(0x104),

    /**
     * Если параметр равен 1, то данные при передаче в крейт по TCP/IP
     * посылаются немедленно без использования алгоритмов для объединения
     * нескольких посылок в один пакет. Это позволяет в некоторых случаях
     * (которые могут зависеть от версии ОС, ее настроек, конфигурации сети и т.п.)
     * уменьшить время задержки при передаче небольших порций данных на вывод,
     * но приводит к увеличению нагрузки на сеть из-за передачи малыми пакетами.
     * По умолчанию данная опция отключена (параметр имеет значение 0).
     * <p>
     * Параметр доступен начиная с версии ltrd 2.1.8.0 и ltrapi 1.31.3.
     */
    LTRD_PARAM_ETH_SEND_NODELAY(0x105),

    /**
     * Размер буфера в 32-битных словах на передачу данных и команд в модуль.
     * Выделяется службой ltrd для каждого модуля для промежуточного
     * хранения слов, принятых от клиента, перед непосредственно передачей.
     * Влияет на максимальное время задержки крейта при чтении данных
     * модулей на вывод и соответственно на размер памяти, используемой службой.
     * По умолчанию данный размер равен 512 Кслов и при отсутствии явной
     * необходимости не требует изменения.
     * <p>
     * Параметр доступен начиная с версии ltrd 2.1.6.0 и ltrapi 1.32.2.
     */
    LTRD_PARAM_MODULE_SEND_BUF_SIZE(0x200),
    /**
     * Размер буфера в 32-битных словах на прием данных и команд из модуля.
     * Выделяется  службой ltrd для каждого модуля для промежуточного
     * хранения слов, принятых от модуля, перед передачей клиенту.
     * Влияет на максимальное время задержки клиента при чтении данных
     * модулей на ввод и соответственно на размер памяти, используемой службой.
     * По умолчанию данный размер равен 1024 Кслов и при отсутствии явной
     * необходимости не требует изменения.
     * <p>
     * Параметр доступен начиная с версии ltrd 2.1.6.0 и ltrapi 1.32.2.
     */
    LTRD_PARAM_MODULE_RECV_BUF_SIZE(0x201),
    ;
    private int value;

    public int intValue() {
        return value;
    }
}
